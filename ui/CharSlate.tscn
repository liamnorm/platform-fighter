[gd_scene load_steps=9 format=2]

[ext_resource path="res://ui/CharSlate.gd" type="Script" id=1]
[ext_resource path="res://resources/humanrobot.png" type="Texture" id=2]
[ext_resource path="res://characters/spacedog/palette.png" type="Texture" id=3]
[ext_resource path="res://ui/fonts/font.tres" type="DynamicFont" id=4]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void fragment(){
	COLOR *= (1.5-UV.y);
	COLOR.a = 0.7;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform sampler2D palette_tex; //Palette to reference, this should be a 1-pixel tall texture containing your palette info
uniform vec4 outline_col : hint_color; //Outline color
uniform float skin;
uniform float sizex;

void fragment() {
    
    //Get red value and sample palette based on it
    float pal_sample = texture(TEXTURE,UV).r;
	float yval = (skin+.5)/17f;
    vec4 col = texture(palette_tex,vec2(pal_sample,yval));
    
    //Get alpha val of adjacent pixels
    vec2 p = TEXTURE_PIXEL_SIZE;
    
    float a = texture(TEXTURE,UV+vec2(p.x,0)).a;
    a += texture(TEXTURE,UV+vec2(-p.x,0)).a;
    a += texture(TEXTURE,UV+vec2(0,p.y)).a;
    a += texture(TEXTURE,UV+vec2(0,-p.y)).a;
    
    //Using found alpha value, determine the opacity of the outline
    
    a = step(a,.5);//Clamp the a value
    col.rgb = mix(outline_col.xyz, col.rgb, col.a);
    col.a = step(a, col.a);
	
	float w = 0.0;
	
	col += vec4(w,w,w,0);
	
	if (UV.x < 0.5-(sizex*.93) || UV.x > 0.5+(sizex*.93)) {
		col.a = 0.;
	}
    
    //Get palette color
    COLOR = col;

}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/outline_col = null
shader_param/skin = 0.0
shader_param/sizex = null
shader_param/palette_tex = ExtResource( 3 )

[node name="CharSlate" type="Node2D"]
script = ExtResource( 1 )

[node name="Background" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 512.0
margin_bottom = 648.0
color = Color( 0, 1, 0.811765, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 4 )
margin_top = -32.0
margin_right = 512.0
margin_bottom = 480.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelBack" type="ColorRect" parent="."]
margin_right = 512.0
margin_bottom = 56.0
color = Color( 0, 0, 0, 0.8 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="."]
margin_right = 272.0
margin_bottom = 96.0
custom_fonts/font = ExtResource( 4 )
text = "SPACEDOG"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="P" type="Label" parent="."]
margin_left = 72.0
margin_top = 464.0
margin_right = 344.0
margin_bottom = 560.0
custom_fonts/font = ExtResource( 4 )
text = "P1"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Name" type="LineEdit" parent="."]
margin_left = 202.0
margin_top = 329.0
margin_right = 452.0
margin_bottom = 353.0
custom_fonts/font = ExtResource( 4 )
custom_colors/selection_color = Color( 1, 0.984314, 0, 1 )
custom_colors/font_color_selected = Color( 1, 0.913725, 0, 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_colors/font_color_uneditable = Color( 0.501961, 0.501961, 0.501961, 1 )
text = "NAME"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CPU" type="Sprite" parent="."]
position = Vector2( 64, 264 )
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
vframes = 2
